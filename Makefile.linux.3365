

#   Make to build Linux version of the Bolometer library libbolom3365.linux.so and
#   make to build Linux64 version,                       libbolom3365.linux64.so


# NOTE: 20060614 tbt Modified this Makefile to only do libbolom3365.so.
#                      libbolom6565.so is default - see other Makefile.

# Note change CFLAGS to build either 3365 or 6565 version.

# 20090123 tbt Updated Makefile to handle linux64 in addition to linux.
#              Makefile now recognizes if this is a 64 or 32-bit make
#              automatically based on OSPATH. pgf90 is default for type.
# 20060609 tbt added -defit6565
# 20060607 tbt Change $(PGI) to $(PGI_DIR)

DBFLAGS =  -O
LDBFLAGS =  


# Note change CFLAGS to build either 3365 or 6565 version.
CFLAGS	      = -I. -I/usr/local/include $(DBFLAGS)  -DEFIT3365 -fPIC
#CFLAGS	      = -I. -I/usr/local/include $(DBFLAGS)  -DEFIT6565 -fPIC

FFLAGS	      = -I/usr/local/include $(DBFLAGS)  -fPIC

# 20060607 tbt
#PGI=/usr/local/pgi
#FC=$(PGI)/linux86/bin/pgf77
#CC=$(PGI)/linux86/bin/pgcc
#LD=$(PGI)/linux86/bin/pgcc

FC=$(PGI_DIR)/bin/pgf77
CC=$(PGI_DIR)/bin/pgcc
LD=$(PGI_DIR)/bin/pgcc


DEST	      = .

EXTHDRS	      = /usr/local/include/nrutil.h

HDRS	      = bolom.h \
		boundext.h \
		bound3365.h \
		gmatrix3365.h \
		gpos3365.h \
		bound6565.h \
		gmatrix6565.h \
		gpos6565.h \
		volmat.h

INSTALL	      = /etc/install

LD	      = ld

# 20060607 tbt
#LDFLAGS      =  -L $(PGI)/linux86/lib -L /usr/local/lib  -lblas  \
                    $(LDBFLAGS)  -lm  -lpgf90 -lpgftnrtl -lpgc

LDFLAGS	      =  -L $(PGI_DIR)/lib    \
			$(PGI_DIR)/lib/libpgf90.a    \
			$(PGI_DIR)/lib/libpgf90.a    \
			$(PGI_DIR)/lib/libpgftnrtl.a \
			$(PGI_DIR)/lib/libpgc.so      \
                        $(PGI_DIR)/lib/libpgsse1.a   \
			$(PGI_DIR)/lib/libpgsse2.a   \
                 -L /usr/local/lib -lblas  \
                 $(LDBFLAGS)  -lm  -lpgf90 -lpgftnrtl -lpgc

LDFLAGS64	  =  -L $(PGI_DIR)/lib    		\
			$(PGI_DIR)/libso/libpgf90.so    \
			$(PGI_DIR)/libso/libpghpf2.so    \
			$(PGI_DIR)/libso/libpgftnrtl.so \
			$(PGI_DIR)/libso/libpgc.so      \
                        /usr/lib64/libm.so \
                        -rpath $(PGI_DIR)/lib:$(PGI_DIR)/libso
                       


CLIBS	      =  -L /usr/local/lib -ltoms -llinpack -llapack  \
                 -lrecipes  -lpppack -lm -lcl $(LDBFLAGS) 

LIBS	      =


# 20090122 tbt As per PGI, try this library instead of libblas.a
#              which is suppose to be shared... but doesn't exist.
#LIBS64	      =  $(PGI_DIR)/libso/libacml.so  $(PGI_DIR)/libso/libpgftnrtl.so
#
# 20110414 whm Not needed now on Venus
LIBS64	      =   $(PGI_DIR)/libso/libpgftnrtl.so


MAKEFILE      = Makefile

OBJS	      = corespline.o \
		bolomlower.o \
		bolomlowercells.o \
		bolomlowercells5pt.o \
		bolomuppercells.o \
		bolomtotal.o \
		bolomupper.o \
		bolomproj.o \
		powell.o \
		587.o \
		idlwrappers.o\
		splinebasis.o\
		efitgeom.o\
		bolomsetgmatrix.o\
		nrutil.o \
		spline.o \
		tomscore.o \
		linmin.o \
		brent.o \
		mnbrak.o \
		f1dim.o

PRINT	      = pr

PROGRAM       = bolomfit

SHELL	      = /bin/sh

SRCS	      = corespline.c \
		bolomlower.c \
		bolomupper.c \
		bolomtotal.c \
		bolomproj.c \
		powell.c \
		idlwrappers.c

SRCSF = splinebasis.f


SYSHDRS	      = /usr/include/errno.h \
		/usr/include/machine/frame.h \
		/usr/include/machine/frame.h \
		/usr/include/machine/save_state.h \
		/usr/include/machine/save_state.h \
		/usr/include/math.h \
		/usr/include/pwd.h \
		/usr/include/signal.h \
		/usr/include/stdio.h \
		/usr/include/stdlib.h \
		/usr/include/sys/errno.h \
		/usr/include/sys/signal.h \
		/usr/include/sys/stdsyms.h \
		/usr/include/sys/syscall.h \
		/usr/include/sys/types.h

all:		libbolom3365.so 

$(PROGRAM):     $(OBJS)  bolomfit.o $(OBJS)
		@echo "Linking $(PROGRAM) ..."
		$(CC) bolomfit.o  $(OBJS) $(CLIBS) -o $(PROGRAM)  
		chmod u+x bolomfit
		@echo "done"
bolomfitsl:     bolomfit.o
		@echo "Linking $(PROGRAM) ..."
		$(CC) bolomfit.o  -L. -lbolom $(CLIBS) -o $(PROGRAM)  
		chmod u+x bolomfit
		@echo "done"

libbolom3365.so:  $(OBJS)
		@echo ' '
		@echo Building libbolom3365.linux.so   20090122 tbt
		@echo ' '
#		$(LD) $(OBJS) -o libbolom3365.so  $(LDFLAGS) $(LIBS)
# 20060608 tbt Added Share
# 20090123 tbt Differentiate linux from linux64.
	 if [ ${OSPATH} = linux ] ; 							\
	 then 										\
	   echo uname 1 = ${OSPATH} ;							\
	   echo ' ' ;                                                                   \
		   echo 'Linux 32-bit version';						\
		   $(LD) -o libbolom3365.linux.so -shared $(OBJS)  $(LDFLAGS) $(LIBS);    \
		   cp libbolom3365.linux.so linux/.;					\
		   echo ' ';								\
		   echo Done building libbolom3365.linux.so; 				\
	 elif [ ${OSPATH} = linux64 ] ; 						\
	 then 										\
	   echo OSPATH 2 = ${OSPATH};							\
	   echo NOTE: linux64/libidl64 constructed;					\
		   echo 'Linux64 version';						\
		   $(LD) -o libbolom3365.linux64.so -shared $(OBJS) $(LDFLAGS64) $(LIBS64); \
		   cp libbolom3365.linux64.so linux64/.;				\
		   echo ' ';								\
		   echo Done building libbolom3365.linux64.so; 				\
	 else										\
	   echo ERROR: OSPATH not linux or linux64  ${OSPATH};				\
	 fi
	 echo ' '
	 echo '--------------------------------------------------------------------'
	 echo ' '
########################
#		$(LD) -o libbolom3365.linux.so -shared   \
#                     $(OBJS)  $(LDFLAGS) $(LIBS)


libbolomx.so: $(OBJS) bolomx.o
		ld -b $(OBJS) bolomx.o -o libbolomx.so  $(LDFLAGS) $(LIBS)

libbolom.a: $(OBJS) 
		ar r libbolom.a $?

clean:;		@rm -f $(OBJS) core

clobber:;	@rm -f $(OBJS) $(PROGRAM) core tags

depend:;	@mkmf -f $(MAKEFILE) ROOT=$(ROOT)

echo:;		@echo $(HDRS) $(SRCS)

index:;		@ctags -wx $(HDRS) $(SRCS)

install:	$(PROGRAM)
		@echo Installing $(PROGRAM) in $(DEST)
		@-strip $(PROGRAM)
		@if [ $(DEST) != . ]; then \
		(rm -f $(DEST)/$(PROGRAM); $(INSTALL) -f $(DEST) $(PROGRAM)); fi

print:;		@$(PRINT) $(HDRS) $(SRCS)

tags:           $(HDRS) $(SRCS); @ctags $(HDRS) $(SRCS)

update:		$(DEST)/$(PROGRAM)

###
bolomcore.o: bolomcore.c spimage_dierckx.c spimage_pppack.c $(HDRS)
bolomfit.o: $(HDRS)
bolomlower.o: bolomlower.c $(HDRS)
bolomupper.o: bolomupper.c $(HDRS)
bolomlowercells.o: bolomlowercells.c $(HDRS)
bolomlowercells5pt.o: bolomlowercells5pt.c $(HDRS)
bolomuppercells.o: bolomuppercells.c $(HDRS)
bolomtotal.o: bolomtotal.c $(HDRS)
bolomproj.o: bolomproj.c $(HDRS)
corespline.o: corespline.c $(HDRS)
